# Generated by Django 4.2.1 on 2023-05-23 02:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='Usuario')),
                ('email', models.CharField(max_length=254, unique=True, verbose_name='Correo')),
                ('name', models.CharField(blank=True, max_length=254, null=True, verbose_name='Nombres')),
                ('lastname', models.CharField(blank=True, max_length=254, null=True, verbose_name='Apellidos')),
                ('active_user', models.BooleanField(default=True)),
                ('admin_user', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Super_User',
            },
        ),
        migrations.CreateModel(
            name='Administrative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.FloatField(verbose_name='Salary')),
                ('position', models.CharField(max_length=250, verbose_name='Position')),
            ],
            options={
                'db_table': 'Administrative',
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.CharField(max_length=7, verbose_name='Cost')),
                ('academic_period', models.CharField(max_length=10, verbose_name='Academic Period')),
                ('credit_count', models.PositiveSmallIntegerField(verbose_name='Credit Count')),
                ('status', models.CharField(default='Active', max_length=10, verbose_name='Status')),
            ],
            options={
                'db_table': 'Enrollment',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Event Date')),
                ('time', models.TimeField(verbose_name='Event Time')),
                ('type', models.CharField(max_length=250, verbose_name='Type')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('subject', models.CharField(max_length=250, verbose_name='Subject')),
                ('status', models.CharField(default='Active', max_length=250, verbose_name='Status')),
            ],
            options={
                'db_table': 'Event',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=250, verbose_name='Position')),
                ('sector', models.CharField(max_length=250, verbose_name='Sector')),
                ('company', models.CharField(max_length=250, verbose_name='Company')),
                ('type', models.CharField(max_length=250, verbose_name='Type')),
            ],
            options={
                'db_table': 'Job',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('category', models.CharField(max_length=250, verbose_name='Category')),
                ('required', models.BooleanField(verbose_name='Required')),
                ('status', models.CharField(default='Active', max_length=250, verbose_name='Status')),
            ],
            options={
                'db_table': 'Question',
            },
        ),
        migrations.CreateModel(
            name='Student_Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('shift', models.CharField(max_length=250, verbose_name='Shift')),
                ('schedule', models.CharField(max_length=250, verbose_name='Schedule')),
            ],
            options={
                'db_table': 'Student_Subject',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.FloatField(verbose_name='Salary')),
                ('faculty', models.CharField(max_length=250, verbose_name='Faculty')),
            ],
            options={
                'db_table': 'Teacher',
            },
        ),
        migrations.CreateModel(
            name='User_General',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('last_name', models.CharField(max_length=250, verbose_name='Last Name')),
                ('phone', models.CharField(max_length=250, null=True, verbose_name='Phone')),
                ('institutional_user', models.CharField(max_length=250, unique=True, verbose_name='Institutional User')),
                ('previous_user', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='Previous User')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('previous_email', models.EmailField(max_length=254, verbose_name='Previous Email')),
                ('password', models.CharField(max_length=50, verbose_name='Password')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('address', models.CharField(max_length=250, verbose_name='Address')),
                ('status', models.CharField(max_length=250, verbose_name='Status')),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Teacher_Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('schedule', models.CharField(max_length=250, verbose_name='Schedule')),
                ('classroom', models.CharField(max_length=250, verbose_name='Classroom')),
                ('status', models.CharField(default='Active', max_length=250, verbose_name='Status')),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.teacher')),
            ],
            options={
                'db_table': 'Teacher_Subject',
            },
        ),
        migrations.AddField(
            model_name='teacher',
            name='user_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.user_general'),
        ),
        migrations.CreateModel(
            name='Subject_Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.enrollment')),
                ('subject_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.student_subject')),
            ],
            options={
                'db_table': 'Subject_Enrollment',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.PositiveSmallIntegerField(verbose_name='Semester')),
                ('major', models.CharField(max_length=250, verbose_name='Major')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.user_general')),
            ],
            options={
                'db_table': 'Student',
            },
        ),
        migrations.CreateModel(
            name='Minutes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('type', models.CharField(max_length=250, verbose_name='Type')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('current_date', models.DateField(verbose_name='Current Date')),
                ('modification_date', models.DateField(verbose_name='Modification Date')),
                ('document', models.FileField(upload_to='', validators=[django.core.validators.FileExtensionValidator(['pdf'])], verbose_name='Document')),
                ('status', models.CharField(default='Active', max_length=250, verbose_name='Status')),
                ('administrative_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.administrative')),
            ],
            options={
                'db_table': 'Minutes',
            },
        ),
        migrations.CreateModel(
            name='Graduate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary_range', models.CharField(max_length=250, null=True, verbose_name='Salary Range')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('previous_email', models.EmailField(max_length=254, verbose_name='Previous Email')),
                ('achievement_level', models.CharField(max_length=250, null=True, verbose_name='Achievement Level')),
                ('work_experience', models.PositiveSmallIntegerField(null=True, verbose_name='Work Experience')),
                ('cv', models.FileField(upload_to='', validators=[django.core.validators.FileExtensionValidator(['pdf'])], verbose_name='CV')),
                ('job_id', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='user.job')),
                ('student_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.student')),
            ],
            options={
                'db_table': 'Graduate',
            },
        ),
        migrations.CreateModel(
            name='Event_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissions', models.CharField(max_length=250, verbose_name='permissions')),
                ('id_Event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.event')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user_general')),
            ],
            options={
                'db_table': 'Event_User',
            },
        ),
        migrations.CreateModel(
            name='Evaluation_History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=250, verbose_name='Semester')),
                ('score', models.PositiveSmallIntegerField(verbose_name='Score')),
                ('type', models.CharField(max_length=250, verbose_name='Type')),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.teacher')),
            ],
            options={
                'db_table': 'Evaluation_History',
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('type', models.CharField(max_length=250, verbose_name='Type')),
                ('grade', models.PositiveSmallIntegerField(verbose_name='Grade')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.question')),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.teacher')),
            ],
            options={
                'db_table': 'Evaluation',
            },
        ),
        migrations.AddField(
            model_name='enrollment',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.student'),
        ),
        migrations.AddField(
            model_name='administrative',
            name='user_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.user_general'),
        ),
    ]
